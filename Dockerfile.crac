# syntax=docker/dockerfile:1

# JRE/JDK image with CRaC

FROM bellsoft/alpaquita-linux-base:stream-musl AS crac-base

ENV LANG=en_US.UTF-8 LANGUAGE=en_US:en
ENV JAVA_HOME="/usr/lib/jvm/liberica21-crac"

RUN set -e; command set -o pipefail; \
    apk add --no-cache binutils curl bash git liberica21-crac-jdk liberica21-crac-jmods liberica21-crac-jre-cds

FROM crac-base AS runtime-build
WORKDIR /runtime-build
RUN jlink --no-header-files --no-man-pages --compress=zip-9 --strip-debug --add-modules java.base,java.logging,jdk.unsupported,java.sql,java.desktop --output runtime

FROM crac-base AS clojure-builder
RUN curl -L -O https://github.com/clojure/brew-install/releases/latest/download/linux-install.sh && chmod +x linux-install.sh && bash ./linux-install.sh && rm ./linux-install.sh

FROM clojure-builder AS app-build
WORKDIR /app-build

ADD deps.edn deps.edn
RUN echo Downloading Clojure build deps && clojure -Srepro -Stree -T:build
RUN echo Downloading Clojure app deps && clojure -Srepro -Stree 

COPY src src/
COPY build.clj .
RUN clojure -Srepro -Sverbose -T:build ci :uber-file target/app.jar

FROM alpine:3.19.1 AS app-base
SHELL ["/bin/sh", "-o", "pipefail", "-c"]
ENV APP_USER "app"
ENV APP_DIR "/${APP_USER}"
ENV DATA_DIR "${APP_DIR}/data"

RUN adduser -s /bin/true -u 1000 -D -h $APP_DIR $APP_USER \
  && mkdir "$DATA_DIR" \
  && chown -R "$APP_USER" "$APP_DIR" \
  && chmod 700 "$APP_DIR" "$DATA_DIR"

RUN set -e; command set -o pipefail; \
    apk add --no-cache ca-certificates; \
    apk add --no-cache criu --repository=http://dl-cdn.alpinelinux.org/alpine/edge/testing/; 

WORKDIR ${APP_DIR}

ENV PLAYDOH_PORT=8090
ENV MALLOC_ARENA_MAX=2
ENV JAVA_HOME="${APP_DIR}/runtime"
ENV JDK_JAVA_OPTIONS="-XshowSettings:system -XX:+UseContainerSupport -XX:CRaCCheckpointTo=${DATA_DIR} -Xmx768m -Xms128m"
ENV JAVA_OPTS="-Dclojure.tools.logging.factory=clojure.tools.logging.impl/log4j2-factory"

FROM app-base AS app-snapshot

COPY --link --from=runtime-build /runtime-build/runtime runtime
COPY --link --from=app-build /app-build/target/app.jar .

FROM app-snapshot AS app-snapshot2
RUN runtime/bin/java -jar app.jar crac

FROM app-base AS app

COPY --link --from=app-snapshot2 ${APP_DIR} ${APP_DIR}

CMD [ "runtime/bin/java", , "-jar", "app.jar" ]